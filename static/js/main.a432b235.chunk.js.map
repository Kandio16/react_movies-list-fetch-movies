{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbID","getMovies","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","setTitle","notFound","setNotFound","findMovie","movieApi","Response","Title","Plot","Poster","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","state","data","newMovie","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6yEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,8BCR3BG,G,MAAS,uCAAG,WAAMd,GAAN,iBAAAe,EAAA,sEACAC,MAAM,GAAD,OAJrB,2BAIqB,cAAahB,EAAb,mBAHf,aAEU,cACjBiB,EADiB,gBAEFA,EAASC,OAFP,cAEjBT,EAFiB,yBAIhBA,GAJgB,2CAAH,uDCITU,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,MAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcuB,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,uCAAG,4BAAAX,EAAA,sEACOD,EAAUd,GADjB,OAIU,WAHpB2B,EADU,QAIHC,UACXN,EAAS,CACPtB,MAAO2B,EAASE,MAChB5B,YAAa0B,EAASG,KACtB5B,OAAQyB,EAASI,OACjB5B,QAAQ,8BAAD,OAAgCwB,EAASd,QAChDA,OAAQc,EAASd,SAGnBY,GAAY,IAEZA,GAAY,GAfE,2CAAH,qDAwBf,OACE,oCACE,0BAAMrB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ4B,QAAQ,eAAjC,eAIA,yBAAK5B,UAAU,WACb,2BACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAU,kBACVgC,MAAOpC,EACPqC,SAAU,SAAAC,GAAK,OAAIf,EAASe,EAAMC,OAAOH,WAI5CZ,GACD,uBAAGpB,UAAU,kBAAb,yCAMF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,kBACVoC,QAAS,WACPd,EAAU1B,KAJd,iBAWF,yBAAKI,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,oBACVoC,QAAS,kBA/CnBpB,EAAST,QACTW,EAAS,QA2CD,sBAWN,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GACC,kBAAC,EAAcA,M,QCpFZ8B,EAAb,4MACEC,MAAQ,CACNjC,OAAQkC,GAFZ,EAKEvB,SAAW,SAACwB,GACO,OAAbA,GACE,EAAKF,MAAMjC,OAAOoC,MAAK,SAAAlC,GAAK,OAAIA,EAAME,SAAW+B,EAAS/B,WAC9D,EAAKiC,UAAS,SAAAJ,GAAK,MAAK,CAAEjC,OAAO,GAAD,mBAAMiC,EAAMjC,QAAZ,CAAoBmC,SAR1D,4CAYE,WACE,IAAQnC,EAAWsC,KAAKL,MAAhBjC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,SAAU2B,KAAK3B,iBArBpC,GAAyB4B,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a432b235.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = `https://www.omdbapi.com/`;\nconst apikey = 'de15cdda';\n\nexport const getMovies = async(title) => {\n  const response = await fetch(`${URL}?t=${title}&apikey=${apikey}`);\n  const movies = await response.json();\n\n  return movies;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [notFound, setNotFound] = useState(false);\n\n  const findMovie = async() => {\n    const movieApi = await getMovies(title);\n    // console.log(movieApi)\n\n    if (movieApi.Response !== 'False') {\n      setMovie({\n        title: movieApi.Title,\n        description: movieApi.Plot,\n        imgUrl: movieApi.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieApi.imdbID}`,\n        imdbID: movieApi.imdbID,\n      });\n\n      setNotFound(false);\n    } else {\n      setNotFound(true);\n    }\n  };\n\n  const addToList = () => {\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n            />\n          </div>\n\n          {notFound && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie(title);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addToList()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    if (newMovie !== null\n      && !this.state.movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      this.setState(state => ({ movies: [...state.movies, newMovie] }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}